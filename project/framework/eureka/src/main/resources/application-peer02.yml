server:
  port: 32012
eureka:
  instance:
    hostname: peer02
  client:
    service-url:
      defaultZone: http://peer01:32011/eureka/

spring:
  application:
    name: eureka-server


#server.port:服务注册中心端口号
#eureka.instance.hostname:服务注册中心实例的主机名
#eureka.client.register-with-eureka:是否向服务注册中心注册自己,默认为true。 由于当前应用就是Eureka Server， 因此设为 false；
#eureka.client.fetch-registry:是否检索服务, 默认为true。
#如果这是一个单点的 Eureka Server，不需要同步其他节点的数据，可以设为false。
#eureka.client.eureka-server-u-r-l-context:服务注册中心的配置内容，指定服务注册中心的位置
#以上是比较常用的属性，还有
#eureka.server.enable-self-preservation:是否开启自我保护模式，默认为true。关闭了面板会出现提示:THE SELF PRESERVATION MODE IS TURNED OFF.THIS MAY NOT PROTECT INSTANCE EXPIRY IN CASE OF NETWORK/OTHER PROBLEMS.Eureka 会统计15分钟之内心跳失败的比例低于85%将会触发保护机制，不剔除服务提供者，如果关闭服务注册中心将不可用的实例正确剔除
#eureka.instance.prefer-ip-address:是否使用IP地址的方式,默认是false。不使用主机名来定义注册中心的地址，而使用IP地址的形式
#eureka.instance.ip-address:IP地址，使用该属性配置的IP，否则自动获取除环路IP外的第一个IP地址，与eureka.instance.prefer-ip-address一起使用
#eureka.instance.appname:服务名，一般取 spring.application.name 配置值,默认为unknown
#服务续约
#在注册服务之后，服务提供者会维护一个心跳用来持续高速Eureka Server，“我还在持续提供服务”，否则Eureka Server的剔除任务会将该服务实例从服务列表中排除出去。
#eureka.instance.lease-renewal-interval-in-seconds:定义服务续约任务（心跳）的调用间隔，单位：秒，默认30秒
#eureka.instance.lease-expiration-duration-in-seconds:定义服务失效的时间，表示eureka客户端发送心跳给服务端的频率。单位：秒，默认90秒
#该值太大，则很可能将流量转发过去的时候，该instance已经不存活了。
#该值太小了，则instance则很可能因为临时的网络抖动而被摘除掉。
#该值至少应该大于eureka.instance.lease-renewal-interval-in-seconds

#作者：意识流丶
#链接：https://www.jianshu.com/p/b896752cf3e0
#来源：简书
#简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。